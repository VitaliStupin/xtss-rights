---
databaseChangeLog:
  - changeSet:
      id: 1621842711854-1
      author: Vitali Stupin
      changes:
        - sql:
            comment: Create schema
            dbms: postgresql
            sql: CREATE SCHEMA IF NOT EXISTS rights;
  - changeSet:
      id: 1621842711854-2
      author: Vitali Stupin
      changes:
        - createTable:
            columns:
              - column:
                  autoIncrement: true
                  constraints:
                    nullable: false
                    primaryKey: true
                    primaryKeyName: change_log_pkey
                  name: id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: table_name
                  type: VARCHAR
              - column:
                  constraints:
                    nullable: false
                  name: record_id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: operation
                  type: VARCHAR
              - column:
                  name: old_value
                  type: TEXT
              - column:
                  name: new_value
                  type: TEXT
              - column:
                  defaultValueComputed: now()
                  name: created
                  type: TIMESTAMP WITHOUT TIME ZONE
            tableName: change_log
            schemaName: rights
  - changeSet:
      id: 1621842711854-3
      author: Vitali Stupin
      changes:
        - createTable:
            columns:
              - column:
                  autoIncrement: true
                  constraints:
                    nullable: false
                    primaryKey: true
                    primaryKeyName: right_pkey
                  name: id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: person_id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: organization_id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: right_type
                  type: VARCHAR
              - column:
                  constraints:
                    nullable: false
                  defaultValueComputed: now()
                  name: valid_from
                  type: TIMESTAMP WITHOUT TIME ZONE
              - column:
                  name: valid_to
                  type: TIMESTAMP WITHOUT TIME ZONE
              - column:
                  constraints:
                    nullable: false
                  defaultValueBoolean: false
                  name: revoked
                  type: BOOLEAN
              - column:
                  defaultValueComputed: now()
                  name: created
                  type: TIMESTAMP WITHOUT TIME ZONE
              - column:
                  defaultValueComputed: now()
                  name: last_modified
                  type: TIMESTAMP WITHOUT TIME ZONE
            tableName: right
            schemaName: rights
  - changeSet:
      id: 1621842711854-4
      author: Vitali Stupin
      changes:
        - createTable:
            columns:
              - column:
                  autoIncrement: true
                  constraints:
                    nullable: false
                    primaryKey: true
                    primaryKeyName: organization_pkey
                  name: id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: code
                  type: VARCHAR
              - column:
                  name: name
                  type: VARCHAR
              - column:
                  defaultValueComputed: now()
                  name: created
                  type: TIMESTAMP WITHOUT TIME ZONE
              - column:
                  defaultValueComputed: now()
                  name: last_modified
                  type: TIMESTAMP WITHOUT TIME ZONE
            tableName: organization
            schemaName: rights
  - changeSet:
      id: 1621842711854-5
      author: Vitali Stupin
      changes:
        - createTable:
            columns:
              - column:
                  autoIncrement: true
                  constraints:
                    nullable: false
                    primaryKey: true
                    primaryKeyName: person_pkey
                  name: id
                  type: BIGINT
              - column:
                  constraints:
                    nullable: false
                  name: code
                  type: VARCHAR
              - column:
                  name: first_name
                  type: VARCHAR
              - column:
                  name: last_name
                  type: VARCHAR
              - column:
                  defaultValueComputed: now()
                  name: created
                  type: TIMESTAMP WITHOUT TIME ZONE
              - column:
                  defaultValueComputed: now()
                  name: last_modified
                  type: TIMESTAMP WITHOUT TIME ZONE
            tableName: person
            schemaName: rights
  - changeSet:
      id: 1621842711854-6
      author: Vitali Stupin
      changes:
        - addUniqueConstraint:
            columnNames: code
            constraintName: organization_code_key
            tableName: organization
            schemaName: rights
  - changeSet:
      id: 1621842711854-7
      author: Vitali Stupin
      changes:
        - addForeignKeyConstraint:
            baseColumnNames: organization_id
            baseTableName: right
            baseTableSchemaName: rights
            constraintName: rights_organization_id_fkey
            deferrable: false
            initiallyDeferred: false
            onDelete: CASCADE
            onUpdate: CASCADE
            referencedColumnNames: id
            referencedTableName: organization
            referencedTableSchemaName: rights
            validate: true
  - changeSet:
      id: 1621842711854-8
      author: Vitali Stupin
      changes:
        - addUniqueConstraint:
            columnNames: code
            constraintName: person_code_key
            tableName: person
            schemaName: rights
  - changeSet:
      id: 1621842711854-9
      author: Vitali Stupin
      changes:
        - addForeignKeyConstraint:
            baseColumnNames: person_id
            baseTableName: right
            baseTableSchemaName: rights
            constraintName: rights_person_id_fkey
            deferrable: false
            initiallyDeferred: false
            onDelete: CASCADE
            onUpdate: CASCADE
            referencedColumnNames: id
            referencedTableName: person
            referencedTableSchemaName: rights
            validate: true
  - changeSet:
      id: 1621842711854-10
      author: Vitali Stupin
      changes:
        - sql:
            comment: Triggers for Rights DB
            dbms: postgresql
            sql: |
              CREATE OR REPLACE FUNCTION rights.stamper() RETURNS TRIGGER AS '
              BEGIN
                  IF (TG_OP = ''INSERT'') THEN
                      NEW.created := current_timestamp;
                      NEW.last_modified := current_timestamp;
                      RETURN NEW;
                  ELSIF (TG_OP = ''UPDATE'') THEN
                      NEW.last_modified := current_timestamp;
                      RETURN NEW;
                  ELSE
                      RAISE WARNING ''[rights.stamper] - Other action occurred: %, at %'',TG_OP,now();
                      RETURN NULL;
                  END IF;

              EXCEPTION
                  WHEN OTHERS THEN
                      RAISE WARNING ''[rights.stamper] - Other error occurred - SQLSTATE: %, SQLERRM: %'',SQLSTATE,SQLERRM;
                      RETURN NULL;
              END;
              '
              LANGUAGE plpgsql
              SECURITY DEFINER;

              DROP TRIGGER IF EXISTS stamper ON rights.organization;
              CREATE TRIGGER stamper
              BEFORE INSERT OR UPDATE ON rights.organization
              FOR EACH ROW EXECUTE PROCEDURE rights.stamper();

              DROP TRIGGER IF EXISTS stamper ON rights.person;
              CREATE TRIGGER stamper
              BEFORE INSERT OR UPDATE ON rights.person
              FOR EACH ROW EXECUTE PROCEDURE rights.stamper();

              DROP TRIGGER IF EXISTS stamper ON rights."right";
              CREATE TRIGGER stamper
              BEFORE INSERT OR UPDATE ON rights."right"
              FOR EACH ROW EXECUTE PROCEDURE rights.stamper();

              CREATE OR REPLACE FUNCTION rights.check_right() RETURNS TRIGGER AS '
              BEGIN
                  IF TG_OP in (''INSERT'', ''UPDATE'') THEN
                      -- Check that "valid_from" is not bigger than "valid_to"
                      IF COALESCE(NEW.valid_from, current_timestamp) > COALESCE(NEW.valid_to, NEW.valid_from, current_timestamp) THEN
                          RAISE EXCEPTION ''[rights.check_right] - "valid_from" cannot be bigger than "valid_to"'';
                      END IF;

                      -- Cannot add new right if existing one is not revoked
                      IF (NOT NEW.revoked AND EXISTS(
                          SELECT 1 FROM rights."right"
                          WHERE person_id = NEW.person_id AND organization_id = NEW.organization_id AND right_type = NEW.right_type and revoked = false AND id <> NEW.id
                      )) THEN
                          RAISE EXCEPTION ''[rights.check_right] - revoke existing right before adding new one'';
                      END IF;

                      RETURN NEW;
                  END IF;
              EXCEPTION
                  WHEN OTHERS THEN
                      RAISE WARNING ''[rights.check_right] - Other error occurred - SQLSTATE: %, SQLERRM: %'',SQLSTATE,SQLERRM;
                      RETURN NULL;
              END;
              '
              LANGUAGE plpgsql
              SECURITY DEFINER;

              DROP TRIGGER IF EXISTS check_right ON rights."right";
              CREATE TRIGGER check_right
              BEFORE INSERT OR UPDATE ON rights."right"
              FOR EACH ROW EXECUTE PROCEDURE rights.check_right();

              CREATE OR REPLACE FUNCTION rights.logger() RETURNS TRIGGER AS '
              DECLARE
                  v_old_data TEXT;
                  v_new_data TEXT;
              BEGIN
                  IF (TG_OP = ''INSERT'') THEN
                      v_new_data := ROW(NEW.*);
                      INSERT INTO rights.change_log (table_name, record_id, operation, old_value, new_value)
                      VALUES (TG_TABLE_SCHEMA::TEXT||''.''||TG_TABLE_NAME::TEXT, NEW.id, TG_OP, NULL, v_new_data);
                      RETURN NEW;
                  ELSIF (TG_OP = ''UPDATE'') THEN
                      v_old_data := ROW(OLD.*);
                      v_new_data := ROW(NEW.*);
                      INSERT INTO rights.change_log (table_name, record_id, operation, old_value, new_value)
                      VALUES (TG_TABLE_SCHEMA::TEXT||''.''||TG_TABLE_NAME::TEXT, OLD.id, TG_OP, v_old_data, v_new_data);
                      RETURN NEW;
                  ELSIF (TG_OP = ''DELETE'') THEN
                      v_old_data := ROW(OLD.*);
                      INSERT INTO rights.change_log (table_name, record_id, operation, old_value, new_value)
                      VALUES (TG_TABLE_SCHEMA::TEXT||''.''||TG_TABLE_NAME::TEXT, OLD.id, TG_OP, v_old_data, NULL);
                      RETURN OLD;
                  ELSE
                      RAISE WARNING ''[rights.logger] - Other action occurred: %, at %'',TG_OP,now();
                      RETURN NULL;
                  END IF;

              EXCEPTION
                  WHEN OTHERS THEN
                      RAISE WARNING ''[rights.logger] - Other error occurred - SQLSTATE: %, SQLERRM: %'',SQLSTATE,SQLERRM;
                      RETURN NULL;
              END;
              '
              LANGUAGE plpgsql
              SECURITY DEFINER;

              DROP TRIGGER IF EXISTS logger ON rights.organization;
              CREATE TRIGGER logger
              AFTER INSERT OR UPDATE OR DELETE ON rights.organization
              FOR EACH ROW EXECUTE PROCEDURE rights.logger();

              DROP TRIGGER IF EXISTS logger ON rights.person;
              CREATE TRIGGER logger
              AFTER INSERT OR UPDATE OR DELETE ON rights.person
              FOR EACH ROW EXECUTE PROCEDURE rights.logger();

              DROP TRIGGER IF EXISTS logger ON rights."right";
              CREATE TRIGGER logger
              AFTER INSERT OR UPDATE OR DELETE ON rights."right"
              FOR EACH ROW EXECUTE PROCEDURE rights.logger();
  - changeSet:
      id: 1621842711854-11
      author: Vitali Stupin
      changes:
        - sql:
            comment: App user permissions for Rights DB
            dbms: postgresql
            sql: |
              GRANT USAGE ON SCHEMA rights TO rights_app;
              GRANT INSERT ON rights.change_log TO rights_app;
              GRANT SELECT, INSERT, UPDATE ON rights.organization TO rights_app;
              GRANT SELECT, INSERT, UPDATE ON rights.person TO rights_app;
              GRANT SELECT, INSERT, UPDATE ON rights."right" TO rights_app;
              GRANT USAGE ON SEQUENCE rights.organization_id_seq TO rights_app;
              GRANT USAGE ON SEQUENCE rights.person_id_seq TO rights_app;
              GRANT USAGE ON SEQUENCE rights.right_id_seq TO rights_app;
